#include<stdio.h>
#include<math.h>
#include<stdlib.h>

void troca(float *data1,float *data2) {
  float temp;
  temp=*data1;
  *data1=*data2;
  *data2=temp;
}

int filho_esq(int i) {
  return 2*i;
}


int filho_dir(int i) {
  return 2*i+1;
}


void pushDown(int i,float heap[],int tam) {
  int ha_esq=0,ha_dir=0;

  if (filho_esq(i)<=tam) ha_esq=1;
  if (filho_dir(i)<=tam) ha_dir=1;

  if (ha_esq&&!ha_dir) {
    if (heap[i]<heap[filho_esq(i)]) {
       troca(&heap[filho_esq(i)],&heap[i]);
       pushDown(filho_esq(i),heap,tam);
    }
  }
  else
  if (ha_esq&&ha_dir) {
    if ((heap[i]<heap[filho_esq(i)])||(heap[i]<heap[filho_dir(i)])) {
      if (heap[filho_esq(i)]>heap[filho_dir(i)]) {
	troca(&heap[filho_esq(i)],&heap[i]);
	i = filho_esq(i);
      }
      else {
	troca(&heap[filho_dir(i)],&heap[i]);
	i = filho_dir(i);
      }
      pushDown(i,heap,tam);
    }
  }
}


void montaHeap(float heap[],int tam) {
  int i;
  for (i=tam/2;i>=1;i--) {
    pushDown(i,heap,tam);
  }
}


void desmontaHeap(float heap[],int tam) {
  int i;
  int n=tam;
  for (i=1;i<=n;i++) {
    troca(&heap[1],&heap[tam]);
    tam--;
    pushDown(1,heap,tam);
  }
}

void heapSort(float lista[],int tam) {
  montaHeap(lista,tam);
  desmontaHeap(lista,tam);
}

void main() {
  int N=10;       
  int i; 
  float *numeros; 
  int segundos;

  numeros=(float*)malloc((N+1)*sizeof(float));

  segundos=time(NULL);
  srand(segundos);

  printf ("Antes:");
  for (i=1;i<=N;i++) {

    numeros[i]=rand()/(RAND_MAX/100);
    printf ("%g ",numeros[i]);
  }

  printf ("\n");

  heapSort(numeros,N);

  printf ("Depois do heapSort:");
  for (i=1;i<=N;i++) {
    printf ("%g ",numeros[i]);
  }
}